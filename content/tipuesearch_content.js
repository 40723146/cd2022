var tipuesearch = {"pages": [{'title': 'About', 'text': '協同產品設計實習 \n 網頁:  https://mde.tw/cd2022 \n 倉儲:  https://github.com/mdecycu/cd2022 \n 討論區:  https://gitter.im/mdecourse/cd2022 \n 導引:  https://mde.tw/cd2022_guide \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Realizable', 'text': '以 4 人一小組, 兩小組成一大組的方式, 透過計算機程式方法 (執行運算及操控) 與電腦輔助設計的建模流程, 完成可實現之機電整合系統設計 (Realizable Mechatronic System Design). \n 機械元件建模工具: \n Solvespace  (開源)、 NX1980  (高端)、 Onshape  (全雲端) \n 電子電機控制與感測模擬工具: \n Beginning Robotics with Raspberry Pi and Arduino  (在校園網路下載) \n Wokwi (web-based): \n https://wokwi.com/ \n https://github.com/wokwi \n https://github.com/wokwi \n Servo motor 控制 \n Unoardusim  (單機) \n PICSimLab  (開源) \n 3D 列印與模擬工具 \n G-code based 列印模擬: \n https://github.com/sudipchakraborty/A-simulated-3D-Printer-In-CoppeliaSim  ( Paper ) \n https://github.com/mdecourse/gsim  (執行需要 PyGObject,  參考 ) \n https://github.com/mdecourse/FIBR3DEmul  (CoppeliaSim plugin in Cpp,  paper) \n G-code processing: \n https://github.com/mdecourse/gcode_machine \n 3D Printer based 列印模擬: \n https://all3dp.com/2/gcode-viewer-3d-printer-simulator-best-tools/ \n 雷射切割模擬工具: \n https://github.com/mdecourse/papercraft \xa0 (Unfold STL for laser cutting) \n', 'tags': '', 'url': 'Realizable.html'}, {'title': 'Website', 'text': '倉儲 (Repository) and 網站 (Website) \n 使用分散式版次管理系統中的倉儲建立協同設計網站的特性: \n \n 可清楚記錄每一位成員對於協同設計流程的貢獻細節. \n 網頁中納入  Disqus , 可提升各頁面的互動性. \n 利用 Github, Gitlab, Bitbucket 與 Fossil SCM 同步協同設計倉儲內容, 可提升數位資料保全. \n 可回朔設計流程中的任一版本, 並呈現改版說明註記, 讓新成員自行研究探索. \n \n 每一成員均以 SSH 推送版本至各小組與各大組倉儲, 也可以採用 程式方法 集結成員改版內容. \n SSH push 基本概念: \n 以 git 作為帳號, 利用 secure shell 指令登入 github.com, 一旦近端的 private key 與 github.com 網站上使用者事先存放的 public key 屬於同一對, 則取得將近端版本推向 github.com 伺服器的權限, 對倉儲內容進行改版. \n 在近端若使用 Windows 操作系統, 可以採用 Putty 當作執行 secure shell 指令的工具, 但必須在啟動可攜系統時, 便透過 git 指令內建的系統環境變數 GIT_SSH 設為 plink.exe 所在路徑. 之後 git 就可透過 putty 以 secure shell 的方式推送版本. \n 而利用 putty 推送版本的過程需要網路連線與近端 private key 的所在路徑. 網路連線若在近端使用 IPv6 則必須額外設計能支援\xa0 IPv6 串接到 IPv4 網路協定的代理主機 (因為截至目前 github.com 只支援 IPv4 網路協定). 至於近端的 private key 必須是 putty 能讀取的格式, 而放到 github.com 上的 public key 則必須是 github.com 認可的 OpenSSH 格式. \n', 'tags': '', 'url': 'Website.html'}, {'title': 'Brython', 'text': 'Siemens and Python related repositories \n \n \n \n  for ggame  \n \n \n \n \n \n \n \n \n  Cango 程式庫  \n \n \n \n \n \n \n \n \n  for Konva 程式庫  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n add 1 to 100 p261 ROC flag PROC flag USA flag Draw Grid Random Rect Rect Walk Rect U Walk Rect rev U Walk 單節貪食蛇 5 個紅點方塊 Snake BSnake auto_guess ball bezier big_lotto brython_kw bunny cango_spur cango_spur1 cango_three_gears clear clock convert_temp deepmerge display_stl draw ex1 ex2 ex3 ex4 fibo fourbar guess_a_number hw1_1 hw1_2 Keycode knova1 merge3 power_lotto spur spur_w_form stl_binary_ascii stl_writer Tetris turtle1 turtle2 turtle3 turtle4 turtle5 turtle6 turtle7 turtle8 twl_link_ik webcam websocket ycqsort \n  ######################  editor1 開始 ######################  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n  這裡的畫布 id 為 brython_div  \n \n  graphics-column is for ggame  \n \n  ######################  editor1 結束 ######################  \n  以下可以開始利用 editor1 的設定編寫對應 Brython 程式  \n \n  以上為內建程式, 頁面可透過 ?src=gist_url 執行  \n  add 1 to 100 開始  \n \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'NX1980', 'text': '\n \n', 'tags': '', 'url': 'NX1980.html'}]};