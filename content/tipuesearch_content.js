var tipuesearch = {"pages": [{'title': 'About', 'text': '協同產品設計實習 \n 網頁 倉儲 \n 小組網頁 小組倉儲 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Create Page', 'text': '\n 1. 在 github 建立倉儲，git clone 到近端 \n 2. 參考 https://github.com/mdecycu/cd2022 加入除了 cmsimde 目錄外的所有內容 \n git submodule add https://github.com/mdecourse/cmsimde \n 並從 github 取下子模組內容. \n 3. 在近端維護時, 更換目錄到倉儲中的 cmsimde， \n 以 python wsgi.py 啟動近端網際伺服器， \n 進到網頁修改內容，修改完成後以 generate_pages 轉為靜態內容，將內容推到遠端 \n \n', 'tags': '', 'url': 'Create Page.html'}, {'title': 'Token', 'text': '\n 如何使用 Token 進行推送 \n 1.Settings / developer settings / personal access tokens 申請 token代碼 \n \n 2.可攜程式中找到自己倉儲 / .git 資料夾 / 打開 config / 輸入token代碼 後即可推送 \n \n', 'tags': '', 'url': 'Token.html'}, {'title': 'Notes', 'text': '\n fatal: unable to access \'https://github.com/40723146/cd2022/\': Could not resolve proxy: github.com \n 透過 git config --global http.proxy http://[2001:288:6004:17::42]:3128 來連線 \n 認證身分 \n git config --global user.name "github帳號名稱" git config --global user.email \'\'github email\'\' \n \n', 'tags': '', 'url': 'Notes.html'}, {'title': 'Brython', 'text': 'Siemens and Python related repositories \n \n \n \n  for ggame  \n \n \n \n \n \n \n \n \n  Cango 程式庫  \n \n \n \n \n \n \n \n \n  for Konva 程式庫  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n add 1 to 100 \n  ######################  editor1 開始 ######################  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n  這裡的畫布 id 為 brython_div  \n \n  graphics-column is for ggame  \n \n  ######################  editor1 結束 ######################  \n  以下可以開始利用 editor1 的設定編寫對應 Brython 程式  \n \n  以上為內建程式, 頁面可透過 ?src=gist_url 執行  \n  add 1 to 100 開始  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'NX1980', 'text': '\n w3 任務 \n 透過 NX1980 版本功能的教學影片(連結)，學習使用NX1980 \n 37 \n 38 \n \n', 'tags': '', 'url': 'NX1980.html'}, {'title': 'Blog', 'text': '\n 創立BLOG \n 開啟LEO(在可攜輸入leo) 開啟reveal,pelican進行修改 \n pelican / path / 共用 下 \n SITENAME 為標題 \n pelican / path / 遠端 下 \n SITEURL為BLOG網址 \n 標題 Title:2022 Spring CD 課程 \n 創立時間 Date:2022-03-31 11:00 \n Slug \n https://40723146.github.io/cd2022/blog/Slug代表的網址 \n 例如 Slug 為 w6_40723146 \n 則該頁面導向網址為 https://40723146.github.io/cd2022/blog/w6_40723146', 'tags': '', 'url': 'Blog.html'}]};