<h1>About</h1>
<p><strong><span>協同產品設計實習</span></strong></p>
<p><a href="https://40723146.github.io/cd2022/content/index.html">網頁</a>   <a href="https://github.com/40723146/cd2022">倉儲</a></p>
<p><a href="https://40923221.github.io/cd2022bg4/content/index.html">小組網頁</a><span> </span><a href="https://github.com/40923221/cd2022bg4">小組倉儲</a></p>
<h2>Create Page</h2>
<hr/>
<p>1. 在 github 建立倉儲<span>，</span>git clone 到近端</p>
<p>2. 參考<span> </span><a href="https://github.com/mdecycu/cd2022">https://github.com/mdecycu/cd2022</a> 加入除了 cmsimde 目錄外的所有內容</p>
<p>    git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde建立 cmsimde 目錄<span>，</span></p>
<p>    並從 github 取下子模組內容.</p>
<p>3. 在近端維護時, 更換目錄到倉儲中的 cmsimde<span>，</span></p>
<p>    以 python wsgi.py 啟動近端網際伺服器，</p>
<p>    進到網頁修改內容，修改完成後以 generate_pages 轉為靜態內容<span>，</span>將內容推到遠端</p>
<hr/>
<h2>Token</h2>
<p>如何使用 Token 進行推送</p>
<p>1.Settings / developer settings / personal access tokens 申請 token代碼</p>
<p></p>
<p><img alt="" height="214" src="/images/SSH.png" width="663"/></p>
<p><span>2.可攜程式中找到自己倉儲 / .git 資料夾 / 打開 config / 輸入token代碼 後即可推送</span></p>
<p><span><img alt="" height="345" src="/images/SSH2.png" width="500"/></span></p><h2>Notes</h2>
<hr/>
<p>fatal: unable to access 'https://github.com/40723146/cd2022/': Could not resolve proxy: github.com</p>
<p>透過 git config --global http.proxy http://[2001:288:6004:17::42]:3128 來連線</p>
<hr/>
<p>認證身分</p>
<p>git config --global user.name "github帳號名稱"<br/>git config --global user.email ''github email''</p>
<hr/>
<h1>Group</h1>
<h1>NX1980</h1>
<hr/>
<p>w3 任務</p>
<p><span>透過 NX1980 版本功能的教學影片(</span><a href="https://www.youtube.com/watch?v=GUaa97tALxE&amp;list=PLzEsJue49U_EMMv0eBo8MNJjJOq_WHCrl">連結</a><span>)，學習使用NX1980 </span></p>
<p><strong>37</strong></p>
<p><span></span></p>
<p><strong>38</strong></p>
<hr/>
<h1>Blog</h1>
<hr/>
<p>創立BLOG</p>
<p>開啟LEO(在可攜輸入leo)<br/>開啟reveal,pelican進行修改</p>
<p><span><strong>pelican / path / 共用 下</strong></span></p>
<p><span>SITENAME 為標題</span></p>
<p><span><strong>pelican / path / 遠端 下</strong></span></p>
<p><span>SITEURL為BLOG網址</span></p>
<hr/>
<p><span><span>標題</span> </span><span>Title:2022 Spring CD 課程</span></p>
<p><span><span>創立時間</span><span> </span>Date:2022-03-31 11:00<br/></span></p>
<p><span>Slug</span></p>
<p><span>https://40723146.github.io/cd2022/blog/<span>Slug代表的網址</span></span><span><br/></span></p>
<p><span>例如 Slug 為 w6_40723146</span></p>
<p><span>則該頁面導向網址為 https://40723146.github.io/cd2022/blog/w6_40723146</span></p>
<p><!-- ######################  editor1 結束 ###################### --></p>
<p><!-- 以下可以開始利用 editor1 的設定編寫對應 Brython 程式 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    # 注意這裡清除的畫布 id 為 brython_div
    bd = doc["brython_div"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
<!-- 以上為內建程式, 頁面可透過 ?src=gist_url 執行 --></p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace2.editor.setValue(open(self.url).read())
        Ace2.editor.scrollToRow(0)
        Ace2.editor.gotoLine(0)
        Ace2.run()

################################## grp_2022 start
# for 2b
grp_2022_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/c7043ac81005b069c58080c1222fe30048d588cb/grp_2022.py"
grp_2022 = button2(grp_2022_url)
doc["grp_2022"].bind("click", grp_2022.do)
################################## grp_2022 end
################################## grp2a_2022 start
# for 2a
grp2a_2022_url = "https://gist.githubusercontent.com/mdecourse/05930b1775b77293523b59b1bbb43e57/raw/b78b018f841326f9c8d0ef2391cb5898fa9aaf87/grp2a_2022.py"
grp2a_2022 = button2(grp2a_2022_url)
doc["grp2a_2022"].bind("click", grp2a_2022.do)
################################## grp2a_2022 end
</script>
</p>